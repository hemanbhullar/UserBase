"""Add role column to user table

Revision ID: ed7698201881
Revises: 
Create Date: 2025-04-26 22:26:34.477768

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = 'ed7698201881'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.alter_column('person', 'first_name',
               existing_type=sa.VARCHAR(length=255),
               nullable=True)
    op.alter_column('person', 'last_name',
               existing_type=sa.VARCHAR(length=255),
               nullable=True)
    op.alter_column('person', 'address',
               existing_type=sa.TEXT(),
               type_=sa.String(),
               existing_nullable=True)
    op.drop_constraint('person_email_key', 'person', type_='unique')
    op.create_index(op.f('ix_person_email'), 'person', ['email'], unique=True)
    op.create_index(op.f('ix_person_first_name'), 'person', ['first_name'], unique=False)
    op.create_index(op.f('ix_person_id'), 'person', ['id'], unique=False)
    op.create_index(op.f('ix_person_last_name'), 'person', ['last_name'], unique=False)
    op.drop_column('person', 'document_url')
    op.add_column('user', sa.Column('role', sa.String(), nullable=True))
    op.alter_column('user', 'username',
               existing_type=sa.VARCHAR(length=255),
               nullable=True)
    op.alter_column('user', 'email',
               existing_type=sa.VARCHAR(length=255),
               nullable=True)
    op.alter_column('user', 'password_hash',
               existing_type=sa.VARCHAR(length=255),
               nullable=True)
    op.drop_constraint('user_email_key', 'user', type_='unique')
    op.drop_constraint('user_username_key', 'user', type_='unique')
    op.create_index(op.f('ix_user_email'), 'user', ['email'], unique=True)
    op.create_index(op.f('ix_user_id'), 'user', ['id'], unique=False)
    op.create_index(op.f('ix_user_username'), 'user', ['username'], unique=True)
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_user_username'), table_name='user')
    op.drop_index(op.f('ix_user_id'), table_name='user')
    op.drop_index(op.f('ix_user_email'), table_name='user')
    op.create_unique_constraint('user_username_key', 'user', ['username'])
    op.create_unique_constraint('user_email_key', 'user', ['email'])
    op.alter_column('user', 'password_hash',
               existing_type=sa.VARCHAR(length=255),
               nullable=False)
    op.alter_column('user', 'email',
               existing_type=sa.VARCHAR(length=255),
               nullable=False)
    op.alter_column('user', 'username',
               existing_type=sa.VARCHAR(length=255),
               nullable=False)
    op.drop_column('user', 'role')
    op.add_column('person', sa.Column('document_url', sa.TEXT(), autoincrement=False, nullable=True))
    op.drop_index(op.f('ix_person_last_name'), table_name='person')
    op.drop_index(op.f('ix_person_id'), table_name='person')
    op.drop_index(op.f('ix_person_first_name'), table_name='person')
    op.drop_index(op.f('ix_person_email'), table_name='person')
    op.create_unique_constraint('person_email_key', 'person', ['email'])
    op.alter_column('person', 'address',
               existing_type=sa.String(),
               type_=sa.TEXT(),
               existing_nullable=True)
    op.alter_column('person', 'last_name',
               existing_type=sa.VARCHAR(length=255),
               nullable=False)
    op.alter_column('person', 'first_name',
               existing_type=sa.VARCHAR(length=255),
               nullable=False)
    # ### end Alembic commands ###
